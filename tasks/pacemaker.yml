- name: Enable HighAvailability repository
  command: yum-config-manager --enable HighAvailability
  changed_when: false
  when:
    - ansible_os_family | lower == 'redhat'
    - ansible_distribution_major_version is version('8', '=')

- name: Installs pacemaker & corosync
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - corosync
    - pacemaker

- name: Install haveged
  package:
    name: haveged
    state: present
  when: haveged_enabled | default(True) | bool

- name: Generates corosync key
  become: true
  become_user: root
  command: corosync-keygen
  args:
    creates: /etc/corosync/authkey
  when: inventory_hostname == groups[pacemaker_corosync_group][0]
  register: __corosync_authkey_created
  notify: Restart corosync

- name: Generate tmpdir for authkey
  local_action:
    module: tempfile
  register: authkey_tempfile
  changed_when: False
  check_mode: no
  when: inventory_hostname != groups[pacemaker_corosync_group][0]

- name: Fetch authkey for other nodes
  fetch:
    src: /etc/corosync/authkey
    dest: "{{ authkey_tempfile.path }}"
    flat: yes
  delegate_to: "{{ groups[pacemaker_corosync_group][0] }}"
  changed_when: False
  check_mode: no
  when: inventory_hostname != groups[pacemaker_corosync_group][0]

- name: Copy authkey to other nodes
  copy:
    src: "{{ authkey_tempfile.path }}"
    dest: /etc/corosync/authkey
    mode: "0400"
  when: inventory_hostname != groups[pacemaker_corosync_group][0]
  notify: Restart corosync

- name: Clean up tmpdir
  local_action:
    module: file
    path: "{{ authkey_tempfile.path }}"
    state: "absent"
  changed_when: False
  check_mode: no
  when: inventory_hostname != groups[pacemaker_corosync_group][0]

- name: Chowns authkeys
  file:
    path: /etc/corosync/authkey
    mode: "0400"
    owner: root
  notify: Restart corosync

- name: Creates corosync config
  template:
    src: corosync.conf.j2
    dest: /etc/corosync/corosync.conf
    mode: "0400"
    owner: root
  notify: Restart corosync

- name: Creates log directory
  file:
    path: /var/log/corosync
    state: directory
  when: pacemaker_corosync_use_logfile | bool

- name: Adds logrotate config for corosync
  template:
    src: corosync_logrotate.conf.j2
    dest: /etc/logrotate.d/corosync
    mode: "0644"
    owner: root
  when: pacemaker_corosync_use_logfile | bool

- name: Creates services directory
  file:
    path: /etc/corosync/service.d/
    state: directory

- name: Adds pacemaker service
  copy:
    src: pcmk
    dest: /etc/corosync/service.d/pcmk
    owner: root
    mode: "0400"
  notify: Restart corosync

- name: Adds ferm filtering
  template:
    src: "../templates/ferm.j2"
    dest: /etc/ferm/filter-input.d/60_corosync.conf
  when: ferm_enabled | default(false)
  tags: ferm
  notify: Restart ferm
